from datetime import datetime

def get_current_timestamp() -> str:
    return datetime.now().strftime("%Y-%m-%d %H:%M:%S")


Task_Definitions_prompts =  """
角色:你是一位经验丰富的数据科学家。你的核心任务是仔细、精确地解读一份机器学习任务描述文档。你需要将其中非结构化的自然语言描述，转换为一个结构化的、机器可读的 JSON 对象。
上，你正在执行一个自动化机器学习工作流的第二阶段。你将收到一份任务描述文档的内容。在第一阶段，可能已经生成了一份《数据健康报告》，其中包含了数据集的所有列名，这可以帮助你更准确地识别预测目标。
任务描述内容: {task_description_content}，数据集的基本信息: {dataset_info}
请严格按照下面的规则，从 任务描述内容中提取信息，并生成一个符合 TaskState 定义的 JSON 对象。
提取规则与输出定义:
target_col (目标变量):
任务: 识别并抽取出任务要求预测的具体列名。结果必须是一个字符串 (str)，而且必须是一个真实存在的列
请参考提供的 数据集的基本信息 来确保列名正确无误。
如果描述中只提到了业务概念（如“预测流失”），请从中推断出最可能的列名。若无法确切判断，请返回 null。
problem_type (问题类型):
任务: 判断任务的机器学习问题类型。
要求:答案必须是以下选项之一：classification, regression。
evaluation_metric (评估指标):
任务: 识别并抽取出所有用于评估模型性能的官方指标。
要求:结果必须是一个列表 (list)。常见的指标包括 AUC, F1-Score, RMSE, LogLoss, Accuracy, MAE 等。
即使只找到一个指标，也必须将其放入列表中。如果不足3个，请你更具这个目标变量，自动补齐到三个。
num_features and cat_features (数值特征和类别特征):
任务: 对任务类型描述和数据集基本信息（特别是前10行数据）进行分析，从中识别出所有可能的数值特征和类别特征。
要求:两个特征列表不能重合，而且必须刚好能构成所有的特征（目标特征除外）。
请严格按照以下格式输出:
```json
{{
   "target_col": "...",
  "problem_type": "...",
  "num_features": ["...", "..."],
  "cat_features": ["...", "..."],
  "evaluation_metric": ["...", "..."]
}}
```
"""

EDA_prompts = """
**角色:** 你是一位资深数据科学分析师，专注于特征选择。
**任务:** 基于随机森林特征重要性、数据缺失值情况和业务逻辑，选择最具潜力的10个特征。
**输入信息:**
- **特征重要性得分:** {feature_importance}
- **缺失值情况:** {missing_info}  
- **业务逻辑总结:** {business_summary}
- **目标变量:** {target_col}
- **问题类型:** {problem_type}
**选择标准:**
1. 缺失值占比不超过30%
2. 随机森林重要性得分较高
3. 结合业务逻辑判断特征价值
**要求:** 从所有特征中选择最重要的10个特征，返回特征名称列表。请严格返回一个list列表
实例['features1','features2',...]
"""


query_writer_instructions = """
**角色:** 你是一位专业的特征工程研究员，专注于基于业务场景生成高质量的搜索查询。
**任务:** 基于业务背景和重要特征，生成{number_queries}个专业搜索查询，用于发现特征衍生策略。
**核心目标:** 将手动、耗时且依赖专家经验的特征衍生过程，转化为自动化、智能化的分析流程，最终产出高质量、可解释、且即刻可用的特征衍生策略。
**输入信息:**
- **业务背景:** {business_summary}
- **重要特征:** {selected_features}
- **目标变量:** {target_col}
- **问题类型:** {problem_type}
**搜索查询类型（要获取的信息）:**
1. **特征变换方法:** 数学变换、编码技术、分箱策略
2. **特征组合策略:** 交互特征、比率特征、聚合特征
3. **业务知识驱动:** 领域专家的特征工程经验
4. **统计方法:** 基于统计学的特征衍生技术
**查询示例模板:**
- "[特征名] feature engineering techniques for [问题类型] prediction"
- "how to create interaction features between [特征1] and [特征2] for [业务场景]"
- "[业务领域] domain-specific feature engineering best practices"
- "mathematical transformations for [特征类型] features in [问题类型]"
**要求:**
1. 每个查询都要针对具体的特征或特征组合
2. 结合业务场景的实际需求
3. 优先关注前10个重要特征的衍生可能性
4. 查询要具体且可执行，避免过于宽泛
请生成{number_queries}个高质量的英文搜索查询。
请严格返回一个list列表，格式如下：
```json
["query1", "query2", ...]
```
"""


web_searcher_instructions = """
**角色:** 你是一位特征工程专家，专注于从搜索结果中提取可直接执行的特征组合策略。
**任务:** 从搜索结果中提炼出具体的、可直接操作的特征组合策略。
**搜索结果:** {research_topic}
**输出要求:** 
只返回具体的特征组合操作，格式如下：
1. **交叉特征衍生:** 将特征A和特征B进行乘法组合 → new_feature = A * B
2. **比率特征衍生:** 将特征C和特征D进行除法组合 → new_feature = C / D  
3. **分组统计特征:** 按特征E分组，计算特征F的均值 → new_feature = mean(F) group by E
4. **数学变换特征:** 对特征G进行对数变换 → new_feature = log(G + 1)
5. **分箱编码特征:** 将连续特征H分成5个等宽区间 → new_feature = pd.cut(H, bins=5)
**要求:**
- 每条策略必须包含具体的操作步骤
- 直接说明用哪些特征进行什么操作
- 避免理论解释，只要操作方法(注意只需要返回特征组合方法就行)
请基于搜索结果，提取出{one_query_limit}个最直接可用的特征组合策略。
"""


feature_summary_instructions = """
**角色:** 你是一位特征工程专家，专注于汇总和整合特征衍生策略。

**任务:** 将多个搜索结果中的特征组合策略进行汇总，输出最终的特征衍生方案。

**输入信息:**
- **业务背景:** {business_summary}
- **重要特征列表:** {selected_features}
- **目标变量:** {target_col}
- **问题类型:** {problem_type}
- **所有搜索结果:** {all_research_results}

**输出要求:**
基于所有搜索结果，汇总出最有价值的10个特征衍生策略：

## 特征衍生策略汇总报告

### 推荐的特征衍生方案：

1. **策略名称:** [具体名称]
   - **操作方法:** [具体公式或步骤]
   - **适用特征:** [使用哪些特征]

2. **策略名称:** [具体名称]
   - **操作方法:** [具体公式或步骤]
   - **适用特征:** [使用哪些特征]

...

**要求:**
- 每个策略必须具体可执行
- 避免重复或相似的策略
- 优先选择最实用的方案
- 最多输出10个策略
- 只要操作方法，不要理论解释

请基于所有搜索结果，汇总出最有价值的特征衍生策略。"""